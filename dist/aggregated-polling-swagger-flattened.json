{
  "swagger": "2.0",
  "info": {
    "title": "Aggregated Polling API Specification",
    "description": "Swagger representing the Open Banking Aggregated Polling API for Security Event Tokens",
    "termsOfService": "https://www.openbanking.org.uk/terms",
    "contact": {
      "name": "Service Desk",
      "email": "ServiceDesk@openbanking.org.uk"
    },
    "license": {
      "name": "open-licence",
      "url": "https://www.openbanking.org.uk/open-licence"
    },
    "version": "v4.0-draft7"
  },
  "basePath": "/open-banking/v4.0",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/": {
      "post": {
        "summary": "Poll for Security Event Tokens",
        "tags": [
          "Events"
        ],
        "parameters": [
          {
            "name": "requestBody",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "maxEvents": {
                  "type": "integer",
                  "description": "The maximum number of unacknowledged SETs that should be returned"
                },
                "returnImmediately": {
                  "type": "boolean",
                  "description": "The SET Transmitter should return an immediate response even if no results are available (short polling)",
                  "default": false
                },
                "ack": {
                  "type": "array",
                  "description": "An array of Strings that each correspond to the \"jti\" of a successfully received SET",
                  "items": {
                    "type": "string",
                    "format": "JWT"
                  }
                },
                "setErrs": {
                  "type": "object",
                  "description": "A JSON Object that contains one or more nested JSON attributes that correspond to the \"jti\" of each invalid SET received.  The value of each is a JSON object whose contents is an \"err\" attribute and \"description\" attribute whose value correspond to the errors",
                  "additionalProperties": {
                    "type": "object",
                    "required": [
                      "err",
                      "description"
                    ],
                    "properties": {
                      "err": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 40
                      },
                      "description": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 256
                      }
                    }
                  }
                }
              },
              "example": {
                "returnImmediately": true,
                "maxEvents": 1,
                "ack": [
                  "2644f8cbc8294325ad103ddfc4a5b15d"
                ],
                "setErrs": {
                  "1fd954d5fb964afb97deee232bb88d1f": {
                    "err": "jwtIss",
                    "description": "Issuer is invalid or could not be verified"
                  }
                }
              }
            }
          },
          {
            "in": "header",
            "name": "x-fapi-financial-id",
            "type": "string",
            "required": true,
            "description": "The unique id of the ASPSP to which the request is issued. The unique id will be issued by OB."
          },
          {
            "in": "header",
            "name": "x-fapi-interaction-id",
            "type": "string",
            "required": false,
            "description": "An RFC4122 UID used as a correlation id."
          }
        ],
        "responses": {
          "200": {
            "description": "Polling completed successfully",
            "schema": {
              "type": "object",
              "required": [
                "sets",
                "moreAvailable"
              ],
              "properties": {
                "sets": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string",
                    "format": "JWT"
                  }
                },
                "moreAvailable": {
                  "type": "boolean",
                  "description": "Indicates if more unacknowledged SETs are available to be returned"
                }
              },
              "example": {
                "sets": {
                  "25fd4432da4e4e609033a733aea68a54": "eyJhbG...8o8PLY"
                },
                "moreAvailable": true
              }
            }
          }
        },
        "security": [
          {
            "TPPOAuth2Security": [
              "eventpolling"
            ]
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "TPPOAuth2Security": {
      "type": "oauth2",
      "flow": "application",
      "tokenUrl": "https://authserver.example/token",
      "scopes": {
        "eventpolling": "Ability to poll for, acknowledge and receive Security Event Tokens"
      },
      "description": "TPP client credential authorisation flow with the ASPSP"
    }
  }
}